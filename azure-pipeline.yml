pool:
  name: Jaro-pool
  demands:
  - maven
  - java

variables:
  mavenPOMFile: 'pom.xml'

steps:
- task: Maven@3
  displayName: Maven
  inputs:
    mavenPomFile: '$(Parameters.mavenPOMFile)'
    goals: 'package -DskipTests=true'

- task: CopyFiles@2
  displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
  inputs:
    SourceFolder: '$(system.defaultworkingdirectory)'
    Contents: '**/*.jar'
    TargetFolder: '$(build.artifactstagingdirectory)'
  condition: succeededOrFailed()

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: Shopping'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)'
    ArtifactName: Shopping
  condition: succeededOrFailed()

- task: SonarSource.sonarqube.15B84CA1-B62F-4A2A-A403-89B77A063157.SonarQubePrepare@5
  displayName: 'Prepare analysis on SonarQube'
  inputs:
    SonarQube: 'azure-token-good'
    scannerMode: CLI
    configMode: manual
    cliProjectKey: 'shopping-cart'
    cliProjectName: 'shopping-cart'
    extraProperties: 'sonar.java.binaries=.'

- task: SonarSource.sonarqube.6D01813A-9589-4B15-8491-8164AEB38055.SonarQubeAnalyze@5
  displayName: 'Run Code Analysis'

- task: SonarSource.sonarqube.291ed61f-1ee4-45d3-b1b0-bf822d9095ef.SonarQubePublish@5
  displayName: 'Publish Quality Gate Result'

- task: dependency-check.dependencycheck.dependency-check-build-task.dependency-check-build-task@6
  displayName: 'Dependency Check'
  inputs:
    projectName: 'shopping-cart'
    scanPath: .

- bash: 'docker build -t shopping1.0:latest -f docker/Dockerfile .'
  displayName: 'Docker Build'

- bash: 'docker run -d --name shop -p 8070:8070 shopping1.0:latest'
  displayName: 'Docker run'
